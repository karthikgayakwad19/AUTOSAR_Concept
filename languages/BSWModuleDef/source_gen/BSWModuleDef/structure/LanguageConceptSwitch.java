package BSWModuleDef.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int AUTOSARDefs = 0;
  public static final int BooleanParameterDef = 1;
  public static final int ChoiceContainerDef = 2;
  public static final int ContainerDef = 3;
  public static final int DefCollection = 4;
  public static final int DefinitionsEntry = 5;
  public static final int EnumParameterDef = 6;
  public static final int IntegerParameterDef = 7;
  public static final int ModuleDef = 8;
  public static final int Package = 9;
  public static final int ParamConfContainerDef = 10;
  public static final int ParameterDef = 11;
  public static final int RefereneceDef = 12;
  public static final int TextualParameterDef = 13;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xe303062338bb48cbL, 0xae7ef3be4cd83f0eL);
    builder.put(0x65c9ffa81d0f3d8fL, AUTOSARDefs);
    builder.put(0x3430a1af27c71f88L, BooleanParameterDef);
    builder.put(0x65c9ffa81d0f3d02L, ChoiceContainerDef);
    builder.put(0x3430a1af27c71eabL, ContainerDef);
    builder.put(0x65c9ffa81d0f3d6eL, DefCollection);
    builder.put(0x65c9ffa81d1af143L, DefinitionsEntry);
    builder.put(0x65c9ffa81d19a65bL, EnumParameterDef);
    builder.put(0x3430a1af27c71f87L, IntegerParameterDef);
    builder.put(0x3430a1af27c71dc0L, ModuleDef);
    builder.put(0x3430a1af27c7586fL, Package);
    builder.put(0x65c9ffa81d0f3d1eL, ParamConfContainerDef);
    builder.put(0x3430a1af27c71ec6L, ParameterDef);
    builder.put(0x3430a1af27c758a9L, RefereneceDef);
    builder.put(0x65c9ffa81d19a63fL, TextualParameterDef);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
